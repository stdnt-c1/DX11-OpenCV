name: Python Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: false  # Skip LFS files
        submodules: recursive
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
        cache: pip
        cache-dependency-path: |
          requirements.txt
          setup.py

    - name: Download DLLs
      run: |
        mkdir -p dx11_renderer
        # Download or copy necessary DLLs from reliable sources
        # This will be replaced with actual DLL downloads in production

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.3.1

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install pytest pytest-cov build ninja cmake
        pip install -r requirements.txt

    - name: Build package
      run: |
        cmake -S . -B build -G "Visual Studio 17 2022" -A x64
        cmake --build build --config Release

    - name: Run tests
      run: |
        python -m pytest tests/ --cov=dx11_renderer --cov-report=xml

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: true

    - name: Build wheel
      run: python -m build --wheel

    - name: Store package
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/*.whl
        retention-days: 7